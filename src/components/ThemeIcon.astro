---
import { Moon, Sun } from "lucide-react";
import { Button } from "./ui/button";
---

<Button
    className="inline-flex items-center justify-center rounded-full text-sm font-medium whitespace-nowrap transition-all outline-none select-none focus-visible:border-ring focus-visible:ring-[3px] focus-visible:ring-ring/50 active:scale-[0.95] disabled:pointer-events-none disabled:opacity-50 aria-invalid:border-destructive aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 border border-input bg-background hover:bg-accent hover:text-accent-foreground size-8"
    id="themeToggle"
    variant="ghost"
    size="icon"
>
    <Moon className="fill-black hidden dark:fill-transparent dark:block h-5 w-5 text-foreground" />
    <Sun className="fill-transparent block dark:fill-white dark:hidden h-5 w-5 text-foreground" />
</Button>

<script is:inline>
    const theme = (() => {
        const localStorageTheme = localStorage?.getItem("theme") ?? "";
        if (["dark", "light"].includes(localStorageTheme)) {
            return localStorageTheme;
        }
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
            return "dark";
        }
        return "light";
    })();

    if (theme === "light") {
        document.documentElement.classList.remove("dark");
    } else {
        document.documentElement.classList.add("dark");
    }

    window.localStorage.setItem("theme", theme);

    const handleToggleClick = () => {
        const element = document.documentElement;
        element.classList.toggle("dark");

        const isDark = element.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "light");
    };

    document
        .getElementById("themeToggle")
        ?.addEventListener("click", handleToggleClick);
</script>
