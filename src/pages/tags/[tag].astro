---
import { getCollection } from "astro:content";
import BlogPost from "../../components/BlogPost.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import { calculateReadTime } from "@/lib/readTime";
import { Badge } from "@/components/ui/badge";
import { Card } from "@/components/ui/card";
import { ArrowRight } from "lucide-react";

export async function getStaticPaths() {
    const allPosts = await getCollection("blog");
    const uniqueTags = [
        ...new Set(allPosts.map((post) => post.data.tags).flat()),
    ];

    return uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((post) =>
            post.data.tags.includes(tag)
        );
        return {
            params: { tag },
            props: { posts: filteredPosts },
        };
    });
}

const { tag } = Astro.params;
const { posts } = Astro.props;

const allPosts = await getCollection("blog");
const postsWithReadTime = posts.map((post) => {
    // Format the date
    const formattedDate = new Date(post.data.pubDate).toLocaleDateString(
        "en-US",
        {
            year: "numeric",
            month: "long",
            day: "numeric",
        }
    );

    return {
        ...post,
        readTime: calculateReadTime(post.body || ""),
        formattedDate,
    };
});
const tags = [...new Set(allPosts.map((post) => post.data.tags).flat())];
---

<BaseLayout pageTitle={tag}>
    <div class="max-w-4xl mx-auto px-4 sm:px-6 py-16">
        <div class="flex flex-wrap gap-2 mb-8 justify-center animate-fade-in">
            <Badge variant="outline" className="cursor-pointer">
                <a href="/blog">All</a>
            </Badge>
            {
                tags.map((item) => (
                    <Badge
                        key={item}
                        variant={tag === item ? "default" : "outline"}
                        className="cursor-pointer"
                    >
                        <a href={`/tags/${item}`}>{item}</a>
                    </Badge>
                ))
            }
        </div>

        <div class="space-y-8 animate-slide-up">
            {
                postsWithReadTime.map((post) => (
                    <Card
                        key={post.id}
                        className="overflow-hidden hover:shadow-md transition-shadow"
                    >
                        <div class="flex flex-col md:flex-row">
                            <div class="flex-1 px-6">
                                <div class="items-center space-y-4 space-x-4 mb-3">
                                    <div class="flex flex-col gap-4 mb-3">
                                        <div class="flex flex-wrap gap-2">
                                            {post.data.tags.map((tag: string) => (
                                                <span class="inline-block text-sm font-medium py-1 px-2 bg-secondary text-secondary-foreground rounded-md whitespace-nowrap">
                                                    <a href={`/tags/${tag}`}>
                                                        {tag}
                                                    </a>
                                                </span>
                                            ))}
                                        </div>
                                        <div class="flex items-center gap-4">
                                            <span class="text-sm text-muted-foreground">
                                                {post.formattedDate}
                                            </span>
                                            <span class="text-sm text-muted-foreground">
                                                {post.readTime}
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <h2 class="text-xl font-semibold mb-2 group-hover:text-primary transition-colors">
                                    {post.data.title}
                                </h2>
                                <p class="text-muted-foreground">
                                    {post.data.description}
                                </p>
                                <a
                                    href={`/posts/${post.id}/`}
                                    class="mt-4 flex items-center text-sm font-medium text-primary"
                                >
                                    Read more{" "}
                                    <ArrowRight className="ml-1 h-4 w-4" />
                                </a>
                            </div>
                        </div>
                    </Card>
                ))
            }
        </div>
    </div>
</BaseLayout>
